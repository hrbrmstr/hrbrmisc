% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/jsonview.r
\name{json_tree_view}
\alias{json_tree_view}
\title{JSON & R list (virtually any object, really) tree viewer}
\usage{
json_tree_view(x, auto_unbox = TRUE, scroll = FALSE, elementId = NULL,
  width = "100\%", height = NULL)
}
\arguments{
\item{x}{plaintext JSON or an R \code{list}}

\item{auto_unbox}{passed to \code{fromJSON} (more on this when I have time for documentation)}

\item{scroll}{should the \code{<div>} holding the HTML/XML content scroll
(\code{TRUE}) or take up the full viewer/browser window (\code{FALSE}).
Default is \code{FALSE} (take up the full viewer/browser window). If
this is set to \code{TRUE}, \code{height} should be set to a value
other than \code{NULL}.}

\item{elementId}{element id}

\item{width}{widget width (best to keep it at 100\%)}

\item{height}{widget height (kinda only useful for knitting since this is
meant to be an interactive tool).}
}
\description{
Pass in a plaintext JSON or an R \code{list} to see formatted JSON in a viewer.
}
\details{
It uses the \code{jsonlite} package to deal with gnarly lists (h/t @jennybryan).
}
\note{
While this function also works with virtually any R object, large
      data structures will render pretty slowly (web browsers weren't
      really meant to handle this much structured, visual data)
}
\examples{
library(jsonlite)

# available styles
highlight_styles()

# plain character
txt <- '{
"glossary": {
"title": "example glossary",
"GlossDiv": {
"title": "S",
"GlossList": {
"GlossEntry": {
"ID": "SGML",
"SortAs": "SGML",
"GlossTerm": "Standard Generalized Markup Language",
"Acronym": "SGML",
"Abbrev": "ISO 8879:1986",
"GlossDef": {
"para": "A meta-markup language, used to create markup languages such as DocBook.",
"GlossSeeAlso": ["GML", "XML"]
},
"GlossSee": "markup"
}
}
}
}
}'

json_tree_view(txt)

doc <- fromJSON(txt)
json_tree_view(doc)
\dontrun{
json_tree_view(readLines("https://collector.torproject.org/index.json",
                    warn=FALSE))

json_tree_view(fromJSON("https://collector.torproject.org/index.json",
                   simplifyVector=FALSE))
}
}

